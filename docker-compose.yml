version: '2.4'

x-service: &default-ms
  build:
    context: .
    dockerfile: ./docker_config/services/Dockerfile
  env_file: &db-environment
    - ./docker_config/postgres/environment.env
    - ./docker_config/redis/environment.env
    - ./docker_config/rabbitmq/environment.env
  restart: on-failure

x-celery-service: &default-celery-ms
  build:
    context: .
    dockerfile: ./docker_config/celery/Dockerfile
  volumes:
    - ./checkers/:/checkers/
  env_file: *db-environment
  restart: on-failure

services:
  celery:
    <<: *default-celery-ms
    environment:
      - TEST
      - SERVICE=worker

  celerybeat:
    <<: *default-celery-ms
    environment:
      - TEST
      - SERVICE=beat

  flower:
    <<: *default-celery-ms
    environment:
      - TEST
      - SERVICE=flower
    env_file:
      - ./docker_config/celery/flower.env
      - ./docker_config/postgres/environment.env
      - ./docker_config/redis/environment.env
      - ./docker_config/rabbitmq/environment.env

  initializer:
    build:
      context: .
      dockerfile: ./docker_config/initializer/Dockerfile
    env_file: *db-environment
    environment:
      - TEST
    restart: on-failure

  client_api:
    <<: *default-ms
    environment:
      - TEST
      - SERVICE=api

  admin_api:
    <<: *default-ms
    environment:
      - TEST
      - SERVICE=admin
    env_file:
      - ./docker_config/services/admin.env
      - ./docker_config/postgres/environment.env
      - ./docker_config/redis/environment.env
      - ./docker_config/rabbitmq/environment.env

  events:
    <<: *default-ms
    environment:
      - TEST
      - SERVICE=events

  monitoring:
    <<: *default-ms
    environment:
      - TEST
      - SERVICE=monitoring

  tcp_receiver:
    <<: *default-ms
    ports:
      - 31337:31337
    environment:
      - TEST
      - SERVICE=tcp_receiver

  nginx:
    image: nginx:1.17.9-alpine
    ports:
      - 8080:80
      - 80:80
    volumes:
      - ./docker_config/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker_config/nginx/proxy_params:/etc/nginx/proxy_params
      - ./front/dist:/var/www/front:delegated
    restart: on-failure
    depends_on:
      - flower
      - client_api
      - admin_api
      - events
      - monitoring

  redis:
    image: redis:5.0.8-alpine
    command: [ "sh", "-c", "redis-server --requirepass $$REDIS_PASSWORD" ]
    restart: on-failure
    sysctls:
      net.core.somaxconn: 1024
    env_file:
      - ./docker_config/redis/environment.env
    ports:
      - "6379:6379"

  rabbitmq:
    hostname: rabbitmq
    image: rabbitmq:3.8.3-management-alpine
    restart: on-failure
    env_file:
      - ./docker_config/rabbitmq/environment.env
    ports:
      - "5672:5672"
      - "15672:15672"

  postgres:
    image: postgres:12.2
    volumes:
      - ./docker_volumes/postgres/data/:/var/lib/postgresql/data/
    env_file:
      - ./docker_config/postgres/environment.env
    restart: on-failure
    ports:
      - "5432:5432"
      - "6432:5432"
