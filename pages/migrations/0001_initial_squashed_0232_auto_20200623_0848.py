# Generated by Django 3.0.4 on 2020-07-16 22:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import pages.models
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.documents.blocks
import wagtail.images.blocks


class Migration(migrations.Migration):

    replaces = [('pages', '0001_initial'), ('pages', '0002_auto_20160504_1125'), ('pages', '0003_auto_20160505_1210'), ('pages', '0002_auto_20160506_1151'), ('pages', '0004_merge'), ('pages', '0005_auto_20160524_1546'), ('pages', '0006_auto_20160526_1115'), ('pages', '0007_auto_20160526_1123'), ('pages', '0008_auto_20160526_1441'), ('pages', '0009_auto_20160526_1452'), ('pages', '0010_auto_20160527_1448'), ('pages', '0011_auto_20160606_1007'), ('pages', '0012_openstaxteam_position'), ('pages', '0013_auto_20160629_1103'), ('pages', '0014_auto_20160706_1229'), ('pages', '0015_auto_20160707_1116'), ('pages', '0016_auto_20160707_1117'), ('pages', '0017_auto_20160712_1037'), ('pages', '0018_auto_20160712_1042'), ('pages', '0019_auto_20160712_1045'), ('pages', '0020_auto_20160712_1143'), ('pages', '0021_auto_20160712_1152'), ('pages', '0022_auto_20160712_1154'), ('pages', '0023_auto_20160712_1155'), ('pages', '0024_auto_20160712_1200'), ('pages', '0025_auto_20160712_1211'), ('pages', '0026_auto_20160714_1413'), ('pages', '0027_auto_20160718_0951'), ('pages', '0028_auto_20160718_1344'), ('pages', '0029_auto_20160719_1102'), ('pages', '0030_auto_20160719_1105'), ('pages', '0031_auto_20160719_1107'), ('pages', '0032_auto_20160719_1148'), ('pages', '0033_auto_20160719_1206'), ('pages', '0034_auto_20160721_1032'), ('pages', '0035_auto_20160721_1058'), ('pages', '0036_auto_20160721_1100'), ('pages', '0037_auto_20160721_1104'), ('pages', '0038_auto_20160721_1108'), ('pages', '0039_auto_20160721_1109'), ('pages', '0040_auto_20160721_1202'), ('pages', '0041_auto_20160721_1204'), ('pages', '0042_auto_20160721_1210'), ('pages', '0043_auto_20160729_1355'), ('pages', '0044_auto_20160801_1119'), ('pages', '0045_auto_20160803_1625'), ('pages', '0046_auto_20160804_1030'), ('pages', '0047_auto_20160804_1127'), ('pages', '0048_auto_20160808_1641'), ('pages', '0049_auto_20160808_1653'), ('pages', '0050_auto_20160808_1658'), ('pages', '0051_auto_20160809_1130'), ('pages', '0052_auto_20160810_1109'), ('pages', '0053_auto_20160815_1159'), ('pages', '0054_auto_20160822_1135'), ('pages', '0055_institutions_ourimpact_ourimpactinstitutions'), ('pages', '0056_funder_link'), ('pages', '0057_remove_funder_link'), ('pages', '0058_auto_20160906_1034'), ('pages', '0059_ourimpactinstitutions'), ('pages', '0060_remove_institutions_link'), ('pages', '0058_give'), ('pages', '0061_merge'), ('pages', '0062_termsofservice'), ('pages', '0063_ap'), ('pages', '0064_auto_20160921_1133'), ('pages', '0065_faq'), ('pages', '0066_auto_20161018_0810'), ('pages', '0066_aboutus_faq_link'), ('pages', '0067_merge_20161024_1246'), ('pages', '0068_auto_20161025_1300'), ('pages', '0069_support'), ('pages', '0070_auto_20161101_1548'), ('pages', '0071_auto_20161109_0939'), ('pages', '0072_auto_20161110_1338'), ('pages', '0073_giveform'), ('pages', '0074_auto_20161111_0934'), ('pages', '0075_auto_20161114_1556'), ('pages', '0076_contactus_customer_service'), ('pages', '0077_accessibility_licensing'), ('pages', '0078_auto_20170110_1034'), ('pages', '0079_auto_20170126_1155'), ('pages', '0080_remove_contactus_phone_number'), ('pages', '0081_auto_20170216_0944'), ('pages', '0082_compcopy'), ('pages', '0083_adoptform_interestform'), ('pages', '0084_auto_20170516_1646'), ('pages', '0085_marketing'), ('pages', '0086_remove_marketing_section_4_books'), ('pages', '0087_marketingbook'), ('pages', '0088_auto_20170602_1431'), ('pages', '0089_marketingvideolink_marketingvideos'), ('pages', '0090_resource_resourceavailability'), ('pages', '0091_auto_20170614_1337'), ('pages', '0092_auto_20170614_1559'), ('pages', '0093_auto_20170919_1140'), ('pages', '0094_auto_20170919_1144'), ('pages', '0095_auto_20170919_1221'), ('pages', '0096_auto_20170919_1225'), ('pages', '0097_auto_20170919_1320'), ('pages', '0093_auto_20170922_2218'), ('pages', '0098_merge_20170927_1203'), ('pages', '0099_auto_20170928_1339'), ('pages', '0100_remove_marketing_icon_1_image'), ('pages', '0101_auto_20170928_1413'), ('pages', '0102_erratalist'), ('pages', '0103_auto_20171214_1122'), ('pages', '0104_auto_20171218_1007'), ('pages', '0105_privacypolicy'), ('pages', '0106_printorder'), ('pages', '0107_auto_20180521_1139'), ('pages', '0108_printorder'), ('pages', '0109_printorder_featured_provider_name'), ('pages', '0110_auto_20180618_1521'), ('pages', '0111_auto_20180618_1524'), ('pages', '0112_auto_20180620_1242'), ('pages', '0113_auto_20180620_1302'), ('pages', '0114_auto_20180620_1310'), ('pages', '0115_auto_20180620_1311'), ('pages', '0116_auto_20180620_1323'), ('pages', '0112_aboutuspage_who_image'), ('pages', '0117_merge_20180622_1401'), ('pages', '0118_remove_researchpage_mission_image'), ('pages', '0119_auto_20180706_1219'), ('pages', '0120_auto_20180706_1259'), ('pages', '0121_auto_20180709_1122'), ('pages', '0122_homepage_banner_images'), ('pages', '0123_auto_20180716_1457'), ('pages', '0124_auto_20180716_1459'), ('pages', '0125_auto_20180716_1500'), ('pages', '0126_auto_20180716_1524'), ('pages', '0127_auto_20180717_1604'), ('pages', '0128_teampage'), ('pages', '0129_auto_20180725_1600'), ('pages', '0130_group_openstaxpeople'), ('pages', '0131_remove_teampage_people'), ('pages', '0132_auto_20180726_1325'), ('pages', '0133_teampage_team_header'), ('pages', '0134_auto_20180801_1719'), ('pages', '0135_auto_20180806_0930'), ('pages', '0136_careers'), ('pages', '0137_auto_20180830_1545'), ('pages', '0138_auto_20180910_1049'), ('pages', '0139_homepage_mobile_banner_images'), ('pages', '0140_auto_20180920_1556'), ('pages', '0140_auto_20180920_1155'), ('pages', '0141_merge_20180920_1640'), ('pages', '0142_rover'), ('pages', '0143_auto_20181016_1615'), ('pages', '0144_rover_section_2_tabs'), ('pages', '0145_auto_20181016_1619'), ('pages', '0146_auto_20181017_1432'), ('pages', '0147_auto_20181018_1422'), ('pages', '0148_card_rovercardssection2_rovercardssection3'), ('pages', '0149_auto_20181018_1455'), ('pages', '0150_auto_20181018_1459'), ('pages', '0151_auto_20181024_1627'), ('pages', '0151_auto_20181023_1501'), ('pages', '0152_merge_20181029_1531'), ('pages', '0153_impactpage'), ('pages', '0154_auto_20181109_1014'), ('pages', '0155_auto_20181126_1422'), ('pages', '0156_auto_20181126_1423'), ('pages', '0157_auto_20181126_1424'), ('pages', '0158_auto_20181126_1502'), ('pages', '0159_auto_20181203_1421'), ('pages', '0160_auto_20181203_1433'), ('pages', '0161_auto_20181203_1442'), ('pages', '0162_auto_20181203_1442'), ('pages', '0163_auto_20181203_1517'), ('pages', '0164_auto_20181203_1520'), ('pages', '0165_auto_20181203_1619'), ('pages', '0166_auto_20181205_1515'), ('pages', '0167_auto_20181211_1412'), ('pages', '0168_auto_20181211_1416'), ('pages', '0169_auto_20181211_1418'), ('pages', '0170_auto_20181211_1422'), ('pages', '0171_auto_20181211_1425'), ('pages', '0172_auto_20181217_1004'), ('pages', '0173_auto_20181220_0933'), ('pages', '0174_auto_20190108_1521'), ('pages', '0175_auto_20190110_1138'), ('pages', '0176_auto_20190110_1142'), ('pages', '0177_auto_20190110_1449'), ('pages', '0178_rovepage'), ('pages', '0179_auto_20190114_1026'), ('pages', '0180_auto_20190117_1136'), ('pages', '0181_auto_20190118_1501'), ('pages', '0182_institutionalpartnership'), ('pages', '0183_auto_20190207_1330'), ('pages', '0184_herojourneypage'), ('pages', '0185_auto_20190218_1311'), ('pages', '0186_auto_20190218_1317'), ('pages', '0187_auto_20190219_1129'), ('pages', '0188_auto_20190225_1239'), ('pages', '0189_auto_20190225_1348'), ('pages', '0190_auto_20190226_1537'), ('pages', '0191_remove_institutionalpartnership_application_heading'), ('pages', '0192_institutionalpartnerprogrampage'), ('pages', '0193_institutionalpartnerprogrampage_section_4_quote_school'), ('pages', '0194_auto_20190401_1545'), ('pages', '0195_institutionalpartnerprogrampage_section_4_background_image'), ('pages', '0196_auto_20190513_0922'), ('pages', '0197_auto_20190514_0946'), ('pages', '0198_auto_20190523_1121'), ('pages', '0199_aboutuspage_where_map_alt'), ('pages', '0200_roverpage_popup'), ('pages', '0201_auto_20190618_0935'), ('pages', '0202_ourimpact_bg_image'), ('pages', '0203_auto_20190702_1355'), ('pages', '0204_auto_20190925_1225'), ('pages', '0205_auto_20190925_1255'), ('pages', '0206_creatorfestpage'), ('pages', '0207_auto_20191008_1437'), ('pages', '0208_auto_20191008_1444'), ('pages', '0209_auto_20191008_1451'), ('pages', '0210_auto_20191008_1452'), ('pages', '0211_auto_20191008_1453'), ('pages', '0212_auto_20191008_1459'), ('pages', '0213_auto_20191009_1022'), ('pages', '0214_creatorfestpage_banner_image'), ('pages', '0215_auto_20191021_1141'), ('pages', '0216_auto_20191021_1500'), ('pages', '0217_auto_20191022_0924'), ('pages', '0218_partnerspage'), ('pages', '0219_auto_20200121_1424'), ('pages', '0220_auto_20200121_1432'), ('pages', '0221_auto_20200203_0954'), ('pages', '0222_partnerspage_partner_list_label'), ('pages', '0223_remove_partnerspage_partner_list_label'), ('pages', '0222_delete_ecosystemallies'), ('pages', '0224_merge_20200210_1046'), ('pages', '0225_webinarpage'), ('pages', '0226_auto_20200219_1135'), ('pages', '0227_mathquizpage'), ('pages', '0228_auto_20200227_1621'), ('pages', '0229_auto_20200227_1631'), ('pages', '0230_erratalist_alt_correction_schedule'), ('pages', '0231_auto_20200511_1315'), ('pages', '0232_auto_20200623_0848')]

    dependencies = [
        ('wagtailcore', '0030_index_on_pagerevision_created_at'),
        ('wagtailimages', '0001_squashed_0021'),
        ('wagtailcore', '0045_assign_unlock_grouppagepermission'),
        ('wagtailimages', '0020_add-verbose-name'),
        ('wagtaildocs', '0004_capitalizeverbose'),
        ('wagtailimages', '0013_make_rendition_upload_callable'),
        ('books', '0033_auto_20170414_0856'),
        ('wagtailredirects', '0005_capitalizeverbose'),
        ('wagtailcore', '0032_add_bulk_delete_page_permission'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('wagtaildocs', '0010_document_file_hash'),
        ('wagtailcore', '0040_page_draft_title'),
        ('wagtailcore', '0041_group_collection_permissions_verbose_name_plural'),
        ('wagtailimages', '0010_change_on_delete_behaviour'),
        ('wagtailredirects', '0006_redirect_increase_max_length'),
        ('wagtailforms', '0003_capitalizeverbose'),
        ('wagtailimages', '0018_remove_rendition_filter'),
        ('wagtaildocs', '0007_merge'),
        ('wagtailimages', '0019_delete_filter'),
        ('wagtailcore', '0029_unicode_slugfield_dj19'),
        ('wagtailimages', '0021_image_file_hash'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('wagtailcore', '0028_merge'),
        ('wagtailcore', '0023_alter_page_revision_on_delete_behaviour'),
        ('wagtailimages', '0012_copy_image_permissions_to_collections'),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutUs',
            fields=[
                ('intro_heading', models.CharField(default='', max_length=255)),
                ('intro_paragraph', wagtail.core.fields.RichTextField()),
                ('our_team_heading', models.CharField(default='', max_length=255)),
                ('tagline', models.CharField(default='', max_length=255)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Allies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link_external', models.URLField(blank=True, verbose_name='External link')),
                ('heading', models.CharField(max_length=255)),
                ('description', wagtail.core.fields.RichTextField()),
                ('link_url', models.URLField(blank=True, help_text='Call to Action Link')),
                ('link_text', models.CharField(help_text='Call to Action Text', max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EcosystemAllies',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('page_description', models.TextField(default='')),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='GeneralPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('tagline', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('image', pages.models.APIImageChooserBlock()), ('html', wagtail.core.blocks.RawHTMLBlock())])),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='HigherEducation',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro_heading', models.CharField(max_length=255)),
                ('intro_description', models.TextField()),
                ('get_started_heading', models.CharField(max_length=255)),
                ('get_started_step_1_description', models.TextField()),
                ('get_started_step_2_description', models.TextField()),
                ('get_started_step_3_description', models.TextField()),
                ('adopt_cta', models.CharField(default='', max_length=255)),
                ('adopt_description', models.TextField()),
                ('adopt_heading', models.CharField(default='', max_length=255)),
                ('get_started_step_1_cta', models.CharField(default='', max_length=255)),
                ('get_started_step_1_heading', models.CharField(default='', max_length=255)),
                ('get_started_step_2_logged_in_cta', models.CharField(default='', max_length=255)),
                ('get_started_step_2_heading', models.CharField(default='', max_length=255)),
                ('get_started_step_3_cta', models.CharField(default='', max_length=255)),
                ('get_started_step_3_heading', models.CharField(default='', max_length=255)),
                ('row_1', wagtail.core.fields.StreamField([('column', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(required=False)), ('content', wagtail.core.blocks.RichTextBlock(required=False)), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))], help_text='Callout boxes 940x400, Home page boxes 1464x640', required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('cta', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False))]))])),
                ('row_2', wagtail.core.fields.StreamField([('column', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(required=False)), ('content', wagtail.core.blocks.RichTextBlock(required=False)), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))], help_text='Callout boxes 940x400, Home page boxes 1464x640', required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('cta', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False))]))])),
                ('row_3', wagtail.core.fields.StreamField([('column', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(required=False)), ('content', wagtail.core.blocks.RichTextBlock(required=False)), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))], help_text='Callout boxes 940x400, Home page boxes 1464x640', required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('cta', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False))]))])),
                ('get_started_step_2_logged_out_cta', models.CharField(default='', max_length=255)),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('row_1', wagtail.core.fields.StreamField([('column', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(required=False)), ('content', wagtail.core.blocks.RichTextBlock(required=False)), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))], help_text='Callout boxes 940x400, Home page boxes 1464x640', required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('cta', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False))]))])),
                ('row_2', wagtail.core.fields.StreamField([('column', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(required=False)), ('content', wagtail.core.blocks.RichTextBlock(required=False)), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))], help_text='Callout boxes 940x400, Home page boxes 1464x640', required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('cta', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False))]))])),
                ('row_3', wagtail.core.fields.StreamField([('column', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(required=False)), ('content', wagtail.core.blocks.RichTextBlock(required=False)), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))], help_text='Callout boxes 940x400, Home page boxes 1464x640', required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('cta', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False))]))])),
                ('row_4', wagtail.core.fields.StreamField([('column', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(required=False)), ('content', wagtail.core.blocks.RichTextBlock(required=False)), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))], help_text='Callout boxes 940x400, Home page boxes 1464x640', required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('cta', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False))]))])),
                ('row_5', wagtail.core.fields.StreamField([('column', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(required=False)), ('content', wagtail.core.blocks.RichTextBlock(required=False)), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))], help_text='Callout boxes 940x400, Home page boxes 1464x640', required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('cta', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False))]))])),
                ('banner_images', wagtail.core.fields.StreamField([('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))]))], null=True)),
                ('mobile_banner_images', wagtail.core.fields.StreamField([('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))]))], blank=True, null=True)),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'verbose_name': 'homepage',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='OpenStaxTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Team Member Name', max_length=255)),
                ('description', models.TextField()),
                ('position', models.CharField(default='', max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quote_text', wagtail.core.fields.RichTextField()),
                ('quote_image_alignment', models.CharField(blank=True, choices=[('L', 'left'), ('R', 'right'), ('F', 'full')], max_length=1, null=True)),
                ('quote_link', models.URLField(blank=True, null=True)),
                ('quote_link_text', models.CharField(blank=True, max_length=255, null=True)),
                ('quote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
        ),
        migrations.CreateModel(
            name='StrategicAdvisors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Strategic Advisor Name', max_length=255)),
                ('description', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AboutUsOpenStaxTeam',
            fields=[
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=('pages.openstaxteam', models.Model),
        ),
        migrations.CreateModel(
            name='AboutUsStrategicAdvisors',
            fields=[
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=('pages.strategicadvisors', models.Model),
        ),
        migrations.CreateModel(
            name='HigherEducationAllies',
            fields=[
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=('pages.allies', models.Model),
        ),
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('mailing_address', wagtail.core.fields.RichTextField(default='')),
                ('mailing_header', models.CharField(default='', max_length=255)),
                ('tagline', models.CharField(default='', max_length=255)),
                ('customer_service', wagtail.core.fields.RichTextField(default='')),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.DeleteModel(
            name='Allies',
        ),
        migrations.DeleteModel(
            name='HigherEducationAllies',
        ),
        migrations.CreateModel(
            name='FoundationSupport',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('page_description', models.TextField()),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Funder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True, null=True)),
                ('logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
        ),
        migrations.CreateModel(
            name='FoundationSupportFunders',
            fields=[
                ('funder_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pages.Funder')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='funders', to='pages.FoundationSupport')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=('pages.funder', models.Model),
        ),
        migrations.CreateModel(
            name='Institutions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('logo', models.ForeignKey(blank=True, help_text='Image should be 340px wide, horizontal images are ideal', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
        ),
        migrations.CreateModel(
            name='OurImpact',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro_heading', models.CharField(max_length=255)),
                ('intro_description', models.TextField()),
                ('row_1', wagtail.core.fields.StreamField([('column', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(required=False)), ('content', wagtail.core.blocks.RichTextBlock(required=False)), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))], help_text='Callout boxes 940x400, Home page boxes 1464x640', required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('cta', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False))]))])),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='OurImpactInstitutions',
            fields=[
                ('institutions_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pages.Institutions')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='institutions', to='pages.OurImpact')),
            ],
            options={
                'abstract': False,
                'ordering': ['sort_order'],
            },
            bases=('pages.institutions', models.Model),
        ),
        migrations.CreateModel(
            name='TermsOfService',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro_heading', models.CharField(max_length=255)),
                ('terms_of_service_content', wagtail.core.fields.RichTextField()),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Give',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro_heading', models.CharField(max_length=255)),
                ('intro_description', models.TextField()),
                ('other_payment_methods_heading', models.CharField(max_length=255)),
                ('payment_method_1_heading', models.CharField(max_length=255)),
                ('payment_method_1_content', wagtail.core.fields.RichTextField()),
                ('payment_method_2_heading', models.CharField(max_length=255)),
                ('payment_method_2_content', wagtail.core.fields.RichTextField()),
                ('payment_method_3_heading', models.CharField(max_length=255)),
                ('payment_method_3_content', wagtail.core.fields.RichTextField()),
                ('payment_method_4_heading', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_method_4_content', wagtail.core.fields.RichTextField(blank=True, null=True)),
                ('give_cta', models.CharField(max_length=255)),
                ('give_cta_link', models.URLField()),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro_heading', models.CharField(max_length=255)),
                ('intro_description', wagtail.core.fields.RichTextField()),
                ('questions', wagtail.core.fields.StreamField([('question', wagtail.core.blocks.StructBlock([('question', wagtail.core.blocks.RichTextBlock(required=True)), ('slug', wagtail.core.blocks.CharBlock(required=True)), ('answer', wagtail.core.blocks.RichTextBlock(required=True)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False))]))])),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='GiveForm',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('page_description', models.TextField(default='')),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Accessibility',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro_heading', models.CharField(max_length=255)),
                ('accessibility_content', wagtail.core.fields.RichTextField()),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Licensing',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro_heading', models.CharField(max_length=255)),
                ('licensing_content', wagtail.core.fields.RichTextField()),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='CompCopy',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro_heading', models.CharField(max_length=255)),
                ('intro_description', wagtail.core.fields.RichTextField()),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='AdoptForm',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro_heading', models.CharField(max_length=255)),
                ('intro_description', wagtail.core.fields.RichTextField()),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='InterestForm',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro_heading', models.CharField(max_length=255)),
                ('intro_description', wagtail.core.fields.RichTextField()),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='AP',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro_heading', models.CharField(max_length=255)),
                ('intro_description', models.TextField()),
                ('row_1', wagtail.core.fields.StreamField([('column', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(required=False)), ('content', wagtail.core.blocks.RichTextBlock(required=False)), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))], help_text='Callout boxes 940x400, Home page boxes 1464x640', required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('cta', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False))]))])),
                ('row_2', wagtail.core.fields.StreamField([('column', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(required=False)), ('content', wagtail.core.blocks.RichTextBlock(required=False)), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))], help_text='Callout boxes 940x400, Home page boxes 1464x640', required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('cta', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False))]))])),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Support',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro_heading', models.CharField(max_length=255)),
                ('intro_description', wagtail.core.fields.RichTextField()),
                ('row_1', wagtail.core.fields.StreamField([('column', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(required=False)), ('content', wagtail.core.blocks.RichTextBlock(required=False)), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))], help_text='Callout boxes 940x400, Home page boxes 1464x640', required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('cta', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False))]))])),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Marketing',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('section_1_heading', models.CharField(max_length=255)),
                ('section_1_subheading', models.CharField(max_length=255)),
                ('section_1_paragraph', wagtail.core.fields.RichTextField()),
                ('section_1_cta_link', models.URLField()),
                ('section_1_cta_text', models.CharField(max_length=255)),
                ('section_2_heading', models.CharField(max_length=255)),
                ('section_2_subheading', models.CharField(max_length=255)),
                ('section_2_paragraph', wagtail.core.fields.RichTextField()),
                ('section_3_heading', models.CharField(max_length=255)),
                ('section_3_paragraph', wagtail.core.fields.RichTextField()),
                ('section_4_heading', models.CharField(max_length=255)),
                ('section_4_book_heading', models.CharField(max_length=255)),
                ('section_5_heading', models.CharField(max_length=255)),
                ('section_5_paragraph', wagtail.core.fields.RichTextField()),
                ('faqs', wagtail.core.fields.StreamField([('faq', wagtail.core.blocks.StructBlock([('question', wagtail.core.blocks.RichTextBlock(required=True)), ('slug', wagtail.core.blocks.CharBlock(required=True)), ('answer', wagtail.core.blocks.RichTextBlock(required=True)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False))]))])),
                ('section_7_heading', models.CharField(max_length=255)),
                ('section_7_subheading', models.CharField(max_length=255)),
                ('section_7_cta_text_1', models.CharField(max_length=255)),
                ('section_7_cta_link_1', models.URLField()),
                ('section_7_cta_blurb_1', models.CharField(max_length=255)),
                ('section_7_cta_text_2', models.CharField(blank=True, max_length=255, null=True)),
                ('section_7_cta_link_2', models.URLField(blank=True, null=True)),
                ('section_7_cta_blurb_2', models.CharField(blank=True, max_length=255, null=True)),
                ('access_button_cta', models.CharField(default='Access Your Course', max_length=255)),
                ('access_button_link', models.URLField(default='https://tutor.openstax.org/dashboard')),
                ('access_tagline', models.CharField(default='Using OpenStax Tutor Beta?', max_length=255)),
                ('icon_1_paragraph', models.CharField(default='Helps students remember what they previously learned', max_length=255)),
                ('icon_1_subheading', models.CharField(default='Spaced practice', max_length=255)),
                ('icon_2_paragraph', models.CharField(default='Help students learn where they need it most', max_length=255)),
                ('icon_2_subheading', models.CharField(default='Personalized questions', max_length=255)),
                ('icon_3_paragraph', models.CharField(default='Help students study more effectively', max_length=255)),
                ('icon_3_subheading', models.CharField(default='Two-step questions', max_length=255)),
                ('icon_4_paragraph', models.CharField(default='$10 per course saves students money', max_length=255)),
                ('icon_4_subheading', models.CharField(default='Low cost', max_length=255)),
                ('section_4_paragraph', wagtail.core.fields.RichTextField(default='Thousands of students have piloted OpenStax Tutor Beta. Here are the features we’ve prioritized, and more are on the way. Have suggestions for future development? Send us an email at info@openstaxtutor.org.')),
                ('section_4_resource_fine_print', models.CharField(default='*Available for OpenStax Tutor Beta for College Physics', max_length=255)),
                ('floating_footer_button_1_caption', models.CharField(default='Preview and create a course.', max_length=255)),
                ('floating_footer_button_1_cta', models.CharField(default='Get Started', max_length=255)),
                ('floating_footer_button_1_link', models.URLField(default='https://tutor.openstax.org/dashboard')),
                ('floating_footer_button_2_caption', models.CharField(default='Get advice from pioneers of the tool.', max_length=255)),
                ('floating_footer_button_2_cta', models.CharField(default='Join A Webinar', max_length=255)),
                ('floating_footer_button_2_link', models.URLField(default='https://openstax.org/blog/upcoming-openstax-webinars')),
                ('section_6_heading', models.CharField(default='Frequently asked questions', max_length=255)),
                ('section_6_knowledge_base_copy', wagtail.core.fields.RichTextField(default='Knowledge base copy goes here.')),
                ('icon_1_image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
                ('icon_2_image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
                ('icon_3_image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
                ('icon_4_image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
                ('pop_up_text', wagtail.core.fields.RichTextField(default='')),
                ('section_4_coming_soon_heading', models.CharField(default='', max_length=255)),
                ('section_4_coming_soon_text', wagtail.core.fields.RichTextField(default='')),
                ('section_5_science_heading', models.CharField(default='', max_length=255)),
                ('section_5_science_paragraph', wagtail.core.fields.RichTextField(default='')),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='MarketingVideoLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_url', models.URLField(blank=True, null=True)),
                ('video_image_blurb', models.CharField(blank=True, max_length=255, null=True)),
                ('video_file', models.FileField(blank=True, null=True, upload_to='marketing_videos')),
                ('image_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('image_url', models.URLField(blank=True, null=True)),
                ('video_title', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MarketingVideos',
            fields=[
                ('marketingvideolink_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pages.MarketingVideoLink')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('marketing_video', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='marketing_videos', to='pages.Marketing')),
            ],
            options={
                'abstract': False,
                'ordering': ['sort_order'],
            },
            bases=('pages.marketingvideolink', models.Model),
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Resources should be added in pairs to display properly.', max_length=255)),
                ('available', models.BooleanField(default=False)),
                ('alternate_text', models.CharField(blank=True, help_text='If this has text, availability is ignored.', max_length=255, null=True)),
                ('available_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
        ),
        migrations.CreateModel(
            name='ResourceAvailability',
            fields=[
                ('resource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pages.Resource')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('marketing_video', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_availability', to='pages.Marketing')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=('pages.resource', models.Model),
        ),
        migrations.CreateModel(
            name='Technology',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro_heading', models.CharField(max_length=255)),
                ('intro_description', wagtail.core.fields.RichTextField()),
                ('banner_cta', models.CharField(max_length=255)),
                ('select_tech_heading', models.CharField(max_length=255)),
                ('select_tech_step_1', models.CharField(max_length=255)),
                ('select_tech_step_2', models.CharField(max_length=255)),
                ('select_tech_step_3', models.CharField(max_length=255)),
                ('new_frontier_heading', models.CharField(max_length=255)),
                ('new_frontier_subheading', models.CharField(max_length=255)),
                ('new_frontier_description', wagtail.core.fields.RichTextField()),
                ('new_frontier_cta_1', models.CharField(max_length=255)),
                ('new_frontier_cta_2', models.CharField(max_length=255)),
                ('banner_cta_link', models.URLField(blank=True, null=True)),
                ('new_frontier_cta_link_1', models.URLField(blank=True, null=True)),
                ('new_frontier_cta_link_2', models.URLField(blank=True, null=True)),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ErrataList',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('correction_schedule', wagtail.core.fields.RichTextField()),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('deprecated_errata_message', wagtail.core.fields.RichTextField(default='All OpenStax textbooks undergo a rigorous review process. However, like any professional-grade textbook, errors sometimes occur. This book has a new edition available, and errata are no longer being accepted for the old edition. Please find the newest edition of this book on openstax.org/subjects.', help_text='Errata message for deprecated books, controlled via the book state field.')),
                ('new_edition_errata_message', wagtail.core.fields.RichTextField(default='This book has a new edition available. This version is no longer being updated. Please find the newest edition of this book on openstax.org/subjects.', help_text='Errata message for books with new editions, controlled via the book state field.')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='PrivacyPolicy',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro_heading', models.CharField(max_length=255)),
                ('privacy_content', wagtail.core.fields.RichTextField()),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='PrintOrder',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro_heading', models.CharField(max_length=255)),
                ('intro_description', models.TextField()),
                ('providers', wagtail.core.fields.StreamField([('provider', wagtail.core.blocks.StructBlock([('name', wagtail.core.blocks.CharBlock()), ('blurb', wagtail.core.blocks.TextBlock(required=False)), ('icon', wagtail.images.blocks.ImageChooserBlock()), ('cta', wagtail.core.blocks.CharBlock()), ('url', wagtail.core.blocks.URLBlock()), ('canadian', wagtail.core.blocks.BooleanBlock(required=False))], icon='document'))])),
                ('featured_provider_intro_blurb', models.TextField(default='')),
                ('other_providers_intro_blurb', models.TextField(default='')),
                ('featured_providers', wagtail.core.fields.StreamField([('provider', wagtail.core.blocks.StructBlock([('name', wagtail.core.blocks.CharBlock()), ('blurb', wagtail.core.blocks.TextBlock(required=False)), ('icon', wagtail.images.blocks.ImageChooserBlock()), ('cta', wagtail.core.blocks.CharBlock()), ('url', wagtail.core.blocks.URLBlock()), ('canadian', wagtail.core.blocks.BooleanBlock(required=False))], icon='document'))], null=True)),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='AboutUsPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('who_heading', models.CharField(max_length=255)),
                ('who_paragraph', models.TextField()),
                ('what_heading', models.CharField(max_length=255)),
                ('what_paragraph', models.TextField()),
                ('what_cards', wagtail.core.fields.StreamField([('card', wagtail.core.blocks.StreamBlock([('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))])), ('paragraph', wagtail.core.blocks.TextBlock())], icon='placeholder'))])),
                ('where_heading', models.CharField(max_length=255)),
                ('where_paragraph', models.TextField()),
                ('where_map', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('who_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('where_map_alt', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='People',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Publications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('title', models.CharField(max_length=255)),
                ('excerpt', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ResearchAuthors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ResearchPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('mission_header', models.CharField(max_length=255)),
                ('mission_body', models.TextField()),
                ('projects_header', models.CharField(max_length=255)),
                ('people_header', models.CharField(max_length=255)),
                ('publication_header', models.CharField(max_length=255)),
                ('current_members', wagtail.core.fields.StreamField([('person', wagtail.core.blocks.StructBlock([('name', wagtail.core.blocks.CharBlock()), ('title', wagtail.core.blocks.CharBlock()), ('photo', pages.models.APIImageChooserBlock(required=False)), ('website', wagtail.core.blocks.URLBlock(required=False))], icon='user'))], blank=True, null=True)),
                ('publications', wagtail.core.fields.StreamField([('publication', wagtail.core.blocks.StructBlock([('authors', wagtail.core.blocks.CharBlock()), ('date', wagtail.core.blocks.DateBlock()), ('title', wagtail.core.blocks.CharBlock()), ('excerpt', wagtail.core.blocks.CharBlock()), ('download_url', wagtail.core.blocks.URLBlock())], icon='user'))], blank=True, null=True)),
                ('alumni', wagtail.core.fields.StreamField([('person', wagtail.core.blocks.StructBlock([('name', wagtail.core.blocks.CharBlock()), ('title', wagtail.core.blocks.CharBlock()), ('website', wagtail.core.blocks.URLBlock(required=False))], icon='user'))], blank=True, null=True)),
                ('external_collaborators', wagtail.core.fields.StreamField([('person', wagtail.core.blocks.StructBlock([('name', wagtail.core.blocks.CharBlock()), ('title', wagtail.core.blocks.CharBlock()), ('photo', pages.models.APIImageChooserBlock(required=False)), ('website', wagtail.core.blocks.URLBlock(required=False))], icon='user'))], blank=True, null=True)),
                ('projects', wagtail.core.fields.StreamField([('project', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('blurb', wagtail.core.blocks.TextBlock()), ('link', wagtail.core.blocks.URLBlock(help_text='Optional link to project.', required=False))], icon='user'))], blank=True, null=True)),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ResearchPublications',
            fields=[
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=('pages.publications', models.Model),
        ),
        migrations.CreateModel(
            name='ResearchPeople',
            fields=[
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=('pages.people', models.Model),
        ),
        migrations.DeleteModel(
            name='People',
        ),
        migrations.DeleteModel(
            name='ResearchPeople',
        ),
        migrations.DeleteModel(
            name='Publications',
        ),
        migrations.DeleteModel(
            name='ResearchAuthors',
        ),
        migrations.DeleteModel(
            name='ResearchPublications',
        ),
        migrations.CreateModel(
            name='TeamPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('header', models.TextField(max_length=255)),
                ('subheader', models.TextField(max_length=255)),
                ('header_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('team_header', models.CharField(blank=True, max_length=255, null=True)),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(max_length=255)),
                ('people', wagtail.core.fields.StreamField([('person', wagtail.core.blocks.StructBlock([('name', wagtail.core.blocks.CharBlock()), ('title', wagtail.core.blocks.CharBlock(required=False)), ('bio', wagtail.core.blocks.CharBlock(required=False)), ('photo', pages.models.APIImageChooserBlock(required=False))], icon='user'))])),
            ],
        ),
        migrations.CreateModel(
            name='OpenStaxPeople',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pages.Group')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('marketing_video', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='openstax_people', to='pages.TeamPage')),
            ],
            options={
                'abstract': False,
                'ordering': ['sort_order'],
            },
            bases=('pages.group', models.Model),
        ),
        migrations.CreateModel(
            name='Careers',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro_heading', models.CharField(max_length=255)),
                ('careers_content', wagtail.core.fields.RichTextField()),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.DeleteModel(
            name='AboutUs',
        ),
        migrations.DeleteModel(
            name='AboutUsOpenStaxTeam',
        ),
        migrations.DeleteModel(
            name='AboutUsStrategicAdvisors',
        ),
        migrations.DeleteModel(
            name='OpenStaxTeam',
        ),
        migrations.DeleteModel(
            name='StrategicAdvisors',
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('cards', wagtail.core.fields.StreamField([('card', wagtail.core.blocks.StructBlock([('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))])), ('headline', wagtail.core.blocks.TextBlock(required=False)), ('description', wagtail.core.blocks.TextBlock(required=False)), ('button_text', wagtail.core.blocks.CharBlock(required=False)), ('button_url', wagtail.core.blocks.CharBlock(required=False))], icon='document'))])),
            ],
        ),
        migrations.CreateModel(
            name='AnnualReportPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('improving_access', wagtail.core.fields.StreamField([('background_image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))])), ('heading', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.RichTextBlock()), ('give_text', wagtail.core.blocks.CharBlock())], null=True)),
                ('revolution', wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock()), ('letter_body', wagtail.core.blocks.RichTextBlock()), ('signature_image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))])), ('signature_alt_text', wagtail.core.blocks.CharBlock()), ('signature_text', wagtail.core.blocks.RichTextBlock()), ('portrait', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))])), ('portrait_alt_text', wagtail.core.blocks.CharBlock())], null=True)),
                ('founding', wagtail.core.fields.StreamField([('caption', wagtail.core.blocks.RichTextBlock()), ('portrait', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))])), ('portrait_alt_text', wagtail.core.blocks.CharBlock()), ('heading', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.TextBlock())], null=True)),
                ('reach', wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.RichTextBlock()), ('facts', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('number', wagtail.core.blocks.DecimalBlock()), ('unit', wagtail.core.blocks.CharBlock()), ('text', wagtail.core.blocks.CharBlock())])))], null=True)),
                ('disruption', wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.TextBlock()), ('graph', wagtail.core.blocks.StructBlock([('top_caption', wagtail.core.blocks.CharBlock()), ('bottom_caption', wagtail.core.blocks.RichTextBlock()), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))], required=False)), ('image_alt_text', wagtail.core.blocks.CharBlock(required=False))]))], null=True)),
                ('sustainability', wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.TextBlock()), ('partners', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))], required=False)), ('image_alt_text', wagtail.core.blocks.CharBlock())])))], null=True)),
                ('testimonials', wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.TextBlock()), ('testimonials', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))], required=False)), ('image_alt_text', wagtail.core.blocks.CharBlock()), ('quote', wagtail.core.blocks.CharBlock()), ('link', wagtail.core.blocks.URLBlock()), ('link_text', wagtail.core.blocks.CharBlock())])))], null=True)),
                ('giving', wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.TextBlock()), ('link', wagtail.core.blocks.CharBlock()), ('link_text', wagtail.core.blocks.CharBlock())], null=True)),
                ('looking_ahead', wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.TextBlock()), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))]))], null=True)),
                ('map', wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.TextBlock()), ('link', wagtail.core.blocks.CharBlock()), ('link_text', wagtail.core.blocks.CharBlock()), ('background_image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))])), ('image_1', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))])), ('image_2', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))]))], null=True)),
                ('philanthropic_partners', wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.TextBlock()), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))])), ('image_alt_text', wagtail.core.blocks.CharBlock()), ('link_1', wagtail.core.blocks.CharBlock()), ('link_1_text', wagtail.core.blocks.CharBlock()), ('link_2', wagtail.core.blocks.CharBlock()), ('link_2_text', wagtail.core.blocks.CharBlock()), ('quote', wagtail.core.blocks.TextBlock()), ('attribution_name', wagtail.core.blocks.CharBlock()), ('attribution_title', wagtail.core.blocks.CharBlock())], null=True)),
                ('tutor', wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.TextBlock()), ('link', wagtail.core.blocks.CharBlock()), ('link_text', wagtail.core.blocks.CharBlock()), ('right_image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))])), ('bottom_image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))]))], null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='HeroJourneyPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('books', wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock()), ('subheading', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.TextBlock()), ('book_heading', wagtail.core.blocks.CharBlock()), ('book_description', wagtail.core.blocks.TextBlock()), ('books_link', wagtail.core.blocks.CharBlock()), ('books_link_text', wagtail.core.blocks.CharBlock()), ('skip_html', wagtail.core.blocks.RichTextBlock())], null=True)),
                ('quiz', wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock()), ('skip_link', wagtail.core.blocks.CharBlock()), ('skip_link_text', wagtail.core.blocks.CharBlock()), ('complete_message', wagtail.core.blocks.CharBlock()), ('questions', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('question', wagtail.core.blocks.CharBlock()), ('answers', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.CharBlock()), ('correct', wagtail.core.blocks.BooleanBlock(required=False))])))])))], null=True)),
                ('quiz_complete', wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.TextBlock()), ('instructions', wagtail.core.blocks.TextBlock()), ('link_url', wagtail.core.blocks.CharBlock()), ('link_text', wagtail.core.blocks.CharBlock())], null=True)),
                ('share', wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.TextBlock()), ('instructions', wagtail.core.blocks.TextBlock())], null=True)),
                ('thanks', wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.TextBlock()), ('description', wagtail.core.blocks.TextBlock())], null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='InstitutionalPartnership',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('heading_year', models.CharField(max_length=255)),
                ('heading', models.CharField(max_length=255)),
                ('quote', models.TextField()),
                ('quote_author', models.CharField(max_length=255)),
                ('quote_title', models.CharField(blank=True, max_length=255, null=True)),
                ('quote_school', models.CharField(blank=True, max_length=255, null=True)),
                ('heading_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('application_quote', models.TextField(blank=True, null=True)),
                ('application_quote_author', models.CharField(blank=True, max_length=255, null=True)),
                ('application_quote_school', models.CharField(blank=True, max_length=255, null=True)),
                ('application_quote_title', models.CharField(blank=True, max_length=255, null=True)),
                ('program_tab_content', wagtail.core.fields.StreamField([('tab', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.RichTextBlock())])))], null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='InstitutionalPartnerProgramPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('section_1_heading', models.CharField(max_length=255)),
                ('section_1_description', wagtail.core.fields.RichTextField()),
                ('section_1_link_text', models.CharField(max_length=255)),
                ('section_1_link', models.URLField()),
                ('quote', models.TextField()),
                ('quote_name', models.CharField(max_length=255)),
                ('quote_title', models.CharField(max_length=255)),
                ('quote_school', models.CharField(max_length=255)),
                ('section_2_heading', models.CharField(max_length=255)),
                ('section_2_description', wagtail.core.fields.RichTextField()),
                ('section_2_image_alt', models.CharField(max_length=255)),
                ('section_3_heading', models.CharField(max_length=255)),
                ('section_3_description', models.TextField()),
                ('section_3_wide_cards', wagtail.core.fields.StreamField([('card', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('icon', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))])), ('html', wagtail.core.blocks.RichTextBlock())])))])),
                ('section_3_tall_cards', wagtail.core.fields.StreamField([('card', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RichTextBlock()), ('link', wagtail.core.blocks.URLBlock()), ('link_text', wagtail.core.blocks.CharBlock())])))])),
                ('section_4_quote_text', models.TextField()),
                ('section_4_quote_name', models.CharField(max_length=255)),
                ('section_4_quote_title', models.CharField(max_length=255)),
                ('section_5_heading', models.CharField(max_length=255)),
                ('section_5_description', wagtail.core.fields.RichTextField()),
                ('section_5_image_alt', models.CharField(max_length=255)),
                ('section_6_heading', models.CharField(max_length=255)),
                ('section_6_description', models.TextField()),
                ('section_6_cards', wagtail.core.fields.StreamField([('card', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('heading_number', wagtail.core.blocks.CharBlock()), ('heading_unit', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.CharBlock())])))])),
                ('section_7_heading', models.CharField(max_length=255)),
                ('section_7_subheading', models.CharField(max_length=255)),
                ('section_7_icons', wagtail.core.fields.StreamField([('card', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))])), ('image_alt_text', wagtail.core.blocks.CharBlock()), ('current_cohort', wagtail.core.blocks.BooleanBlock(required=False))])))])),
                ('section_7_link_text', models.CharField(max_length=255)),
                ('section_7_link_target', models.URLField()),
                ('section_8_quote_text', models.TextField()),
                ('section_8_quote_name', models.CharField(max_length=255)),
                ('section_8_quote_title', models.CharField(max_length=255)),
                ('section_8_quote_school', models.CharField(max_length=255)),
                ('section_9_heading', models.CharField(max_length=255)),
                ('section_9_submit_url', models.URLField()),
                ('section_9_form_prompt', models.CharField(max_length=255)),
                ('section_9_button_text', models.CharField(max_length=255)),
                ('section_9_contact_html', wagtail.core.fields.RichTextField()),
                ('section_2_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('section_5_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('section_4_quote_school', models.CharField(max_length=255, null=True)),
                ('section_1_background_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('section_5_image_caption', models.CharField(max_length=255, null=True)),
                ('section_4_background_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='MapPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('header_text', models.CharField(max_length=255)),
                ('section_2_header_1', models.CharField(max_length=255)),
                ('section_2_blurb_1', models.TextField()),
                ('section_2_cta_1', models.CharField(max_length=255)),
                ('section_2_link_1', models.CharField(max_length=255)),
                ('section_2_header_2', models.CharField(max_length=255)),
                ('section_2_blurb_2', models.TextField()),
                ('section_2_cta_2', models.CharField(max_length=255)),
                ('section_2_link_2', models.CharField(max_length=255)),
                ('section_3_heading', models.CharField(max_length=255)),
                ('section_3_blurb', models.TextField()),
                ('section_3_cta', models.CharField(max_length=255)),
                ('section_3_link', models.CharField(max_length=255)),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('section_2_image_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('section_2_image_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('section_1_cards', wagtail.core.fields.StreamField([('card', wagtail.core.blocks.StructBlock([('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))])), ('number', wagtail.core.blocks.CharBlock(required=False)), ('unit', wagtail.core.blocks.CharBlock(required=False)), ('description', wagtail.core.blocks.TextBlock(required=False))], icon='document'))], null=True)),
                ('map_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='RoverPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('section_1', wagtail.core.fields.StreamField([('access_button_link', wagtail.core.blocks.URLBlock()), ('access_button_cta', wagtail.core.blocks.CharBlock()), ('image', pages.models.APIImageChooserBlock()), ('blurb', wagtail.core.blocks.TextBlock()), ('button_link', wagtail.core.blocks.URLBlock()), ('button_cta', wagtail.core.blocks.CharBlock()), ('nav_text', wagtail.core.blocks.CharBlock(required=False))])),
                ('section_2', wagtail.core.fields.StreamField([('video', wagtail.core.blocks.RawHTMLBlock()), ('heading', wagtail.core.blocks.CharBlock()), ('subheading', wagtail.core.blocks.TextBlock()), ('blurb', wagtail.core.blocks.TextBlock()), ('nav_text', wagtail.core.blocks.CharBlock(required=False))])),
                ('section_3', wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock()), ('subheading', wagtail.core.blocks.TextBlock()), ('cards', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('icon', pages.models.APIImageChooserBlock()), ('blurb', wagtail.core.blocks.TextBlock())]))), ('button_link', wagtail.core.blocks.URLBlock()), ('button_cta', wagtail.core.blocks.CharBlock()), ('nav_text', wagtail.core.blocks.CharBlock(required=False))])),
                ('section_4', wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock()), ('blurb', wagtail.core.blocks.TextBlock()), ('cards', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock()), ('blurb', wagtail.core.blocks.TextBlock()), ('image', pages.models.APIImageChooserBlock()), ('image_alt_text', wagtail.core.blocks.CharBlock())]))), ('nav_text', wagtail.core.blocks.CharBlock(required=False))])),
                ('section_5', wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock()), ('blurb', wagtail.core.blocks.TextBlock()), ('cards', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('video', wagtail.core.blocks.RawHTMLBlock()), ('heading', wagtail.core.blocks.CharBlock()), ('blurb', wagtail.core.blocks.TextBlock())]))), ('nav_text', wagtail.core.blocks.CharBlock(required=False)), ('see_more_text', wagtail.core.blocks.CharBlock(required=False)), ('see_more_url', wagtail.core.blocks.URLBlock(required=False))], blank=True, null=True)),
                ('section_6', wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock()), ('blurb', wagtail.core.blocks.RichTextBlock()), ('image', pages.models.APIImageChooserBlock()), ('image_alt_text', wagtail.core.blocks.CharBlock()), ('caption', wagtail.core.blocks.CharBlock()), ('nav_text', wagtail.core.blocks.CharBlock(required=False))])),
                ('section_7', wagtail.core.fields.StreamField([('faqs', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('question', wagtail.core.blocks.CharBlock()), ('answer', wagtail.core.blocks.TextBlock())]))), ('webinar_button_url', wagtail.core.blocks.URLBlock()), ('webinar_button_cta', wagtail.core.blocks.CharBlock()), ('signup_button_url', wagtail.core.blocks.URLBlock()), ('signup_button_cta', wagtail.core.blocks.CharBlock()), ('nav_text', wagtail.core.blocks.CharBlock(required=False))])),
                ('promote_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('nav_title', models.CharField(blank=True, max_length=255, null=True)),
                ('popup', wagtail.core.fields.StreamField([('content', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('headline', wagtail.core.blocks.CharBlock()), ('instructions', wagtail.core.blocks.TextBlock()), ('sign_in_text', wagtail.core.blocks.CharBlock()), ('other_option_text', wagtail.core.blocks.CharBlock()), ('other_option_url', wagtail.core.blocks.URLBlock()), ('background_image', pages.models.APIImageChooserBlock())])))], null=True)),
                ('office_hours', wagtail.core.fields.StreamField([('content', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.RichTextBlock()), ('more_info', wagtail.core.blocks.RichTextBlock()), ('image', pages.models.APIImageChooserBlock()), ('link_url', wagtail.core.blocks.URLBlock()), ('link_text', wagtail.core.blocks.CharBlock())])))], blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='CreatorFestPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('banner_headline', models.CharField(max_length=255)),
                ('banner_content', wagtail.core.fields.RichTextField()),
                ('register', wagtail.core.fields.StreamField([('box', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('headline', wagtail.core.blocks.CharBlock()), ('address', wagtail.core.blocks.RichTextBlock()), ('button_url', wagtail.core.blocks.URLBlock()), ('button_text', wagtail.core.blocks.CharBlock())])))])),
                ('navigator', wagtail.core.fields.StreamField([('menu_item', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.CharBlock()), ('slug', wagtail.core.blocks.CharBlock())])))], null=True)),
                ('page_panels', wagtail.core.fields.StreamField([('panel', wagtail.core.blocks.StructBlock([('superheading', wagtail.core.blocks.CharBlock(required=False)), ('heading', wagtail.core.blocks.CharBlock()), ('background_image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))], required=False)), ('embed', wagtail.core.blocks.RawHTMLBlock(required=False)), ('paragraph', wagtail.core.blocks.RichTextBlock(required=False)), ('cards', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('icon', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))])), ('headline', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.RichTextBlock())], null=True)))]))], null=True)),
                ('banner_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='PartnersPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('heading', models.CharField(max_length=255)),
                ('description', wagtail.core.fields.RichTextField()),
                ('partner_landing_page_link', models.CharField(blank=True, help_text='Link text to partner landing page.', max_length=255, null=True)),
                ('partner_request_info_link', models.CharField(blank=True, help_text='Forstack form link text', max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.DeleteModel(
            name='EcosystemAllies',
        ),
        migrations.CreateModel(
            name='WebinarPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('heading', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('hero_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='MathQuizPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('heading', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('results', wagtail.core.fields.StreamField([('result', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', pages.custom_blocks.ImageFormatChoiceBlock()), ('identifier', wagtail.core.blocks.CharBlock(help_text='Used by the frontend for Google Analytics.', required=False))])), ('headline', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.TextBlock()), ('partners', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('partner', pages.models.PartnerChooserBlock())])))])))])),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
