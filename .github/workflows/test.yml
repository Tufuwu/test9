name: CI

on:
  push:
    branches: [dev, main]
  pull_request:
    branches: [dev, main]

env:
  CXX: g++-8
  CC: gcc-8
  # See coveralls-python - Github Actions support:
  # https://github.com/TheKevJames/coveralls-python/blob/main/docs/usage/configuration.rst#github-actions-support
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  COVERALLS_PARALLEL: true
  COVERALLS_SERVICE_NAME: github


jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install flake8 isort>=5.0 mypy nbstripout nbformat
    - name: Lint with flake8
      run: |
        make lint
  docs:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install gcc-8 g++-8 ninja-build graphviz
          python -m pip install --upgrade pip wheel setuptools
          # Keep track of pyro-api main branch
          pip install https://github.com/pyro-ppl/pyro-api/archive/main.zip
          pip install torch==1.8.0+cpu torchvision==0.9.0+cpu -f https://download.pytorch.org/whl/torch_stable.html
          pip install .[test]
          pip install -r docs/requirements.txt
          pip freeze
      - name: Build docs and run doctest
        run: |
          make docs
          make doctest
  unit:
    runs-on: ubuntu-latest
    needs: docs
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install gcc-8 g++-8 ninja-build
          python -m pip install --upgrade pip wheel setuptools
          # Keep track of pyro-api main branch
          pip install https://github.com/pyro-ppl/pyro-api/archive/main.zip
          pip install torch==1.8.0+cpu torchvision==0.9.0+cpu -f https://download.pytorch.org/whl/torch_stable.html
          pip install .[test]
          pip install coveralls
          pip freeze
      - name: Run unit tests
        run: |
          pytest -vs --cov=pyro --cov-config .coveragerc --stage unit --durations 20
      - name: Submit to coveralls
        run: GITHUB_SHA="$GITHUB_RUN_ID" GITHUB_REF="" coveralls --service=github
  examples:
    runs-on: ubuntu-latest
    needs: docs
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install gcc-8 g++-8 ninja-build
          python -m pip install --upgrade pip wheel setuptools
          # Keep track of pyro-api main branch
          pip install https://github.com/pyro-ppl/pyro-api/archive/main.zip
          pip install torch==1.8.0+cpu torchvision==0.9.0+cpu -f https://download.pytorch.org/whl/torch_stable.html
          pip install .[test]
          pip install coveralls
          pip freeze
      - name: Run examples
        run: |
          CI=1 pytest -vs --cov=pyro --cov-config .coveragerc --stage test_examples --durations 10
          grep -l smoke_test tutorial/source/*.ipynb | xargs grep -L 'smoke_test = False' \
                            | CI=1 xargs pytest -vx --nbval-lax --current-env
      - name: Submit to coveralls
        run: GITHUB_SHA="$GITHUB_RUN_ID" GITHUB_REF="" coveralls --service=github
  integration_1:
    runs-on: ubuntu-latest
    needs: docs
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install gcc-8 g++-8 ninja-build
          python -m pip install --upgrade pip wheel setuptools
          # Keep track of pyro-api main branch
          pip install https://github.com/pyro-ppl/pyro-api/archive/main.zip
          pip install torch==1.8.0+cpu torchvision==0.9.0+cpu -f https://download.pytorch.org/whl/torch_stable.html
          pip install .[test]
          pip install coveralls
          pip freeze
      - name: Run integration test (batch 1)
        run: |
          pytest -vs --cov=pyro --cov-config .coveragerc --stage integration_batch_1 --durations 10
      - name: Submit to coveralls
        run: GITHUB_SHA="$GITHUB_RUN_ID" GITHUB_REF="" coveralls --service=github
  integration_2:
    runs-on: ubuntu-latest
    needs: docs
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install gcc-8 g++-8 ninja-build
          python -m pip install --upgrade pip wheel setuptools
          # Keep track of pyro-api main branch
          pip install https://github.com/pyro-ppl/pyro-api/archive/main.zip
          pip install torch==1.8.0+cpu torchvision==0.9.0+cpu -f https://download.pytorch.org/whl/torch_stable.html
          pip install .[test]
          pip install coveralls
          pip freeze
      - name: Run integration test (batch 2)
        run: |
          pytest -vs --cov=pyro --cov-config .coveragerc --stage integration_batch_2 --durations 10
      - name: Submit to coveralls
        run: GITHUB_SHA="$GITHUB_RUN_ID" GITHUB_REF="" coveralls --service=github
  funsor:
    runs-on: ubuntu-latest
    needs: docs
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install gcc-8 g++-8 ninja-build
          python -m pip install --upgrade pip wheel setuptools
          # Keep track of pyro-api main branch
          pip install https://github.com/pyro-ppl/pyro-api/archive/main.zip
          pip install torch==1.8.0+cpu torchvision==0.9.0+cpu -f https://download.pytorch.org/whl/torch_stable.html
          pip install .[test]
          pip install -e .[funsor]
          pip install coveralls
          pip freeze
      - name: Run funsor tests
        run: |
          pytest -vs --cov=pyro --cov-config .coveragerc --stage funsor --durations 10
          CI=1 pytest -vs --cov=pyro --cov-config .coveragerc --stage test_examples --durations 10 -k funsor
      - name: Submit to coveralls
        run: GITHUB_SHA="$GITHUB_RUN_ID" GITHUB_REF="" coveralls --service=github
  finish:
    needs: [unit, examples, integration_1, integration_2, funsor]
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@main
      with:
        github-token: ${{ secrets.github_token }}
        parallel-finished: true
