# Generated by Django 2.0.13 on 2020-01-10 16:06

from django.db import migrations
from django.db import transaction


fields_to_values = {
    "patient_failed_to_return": "Treatment abandoned - patient failed to return",
    "patient_requested_stop": "Treatment abandoned - patient requested",
    "treatment_discontinued": "Treatment discontinued",
    "treatment_completed": "Treatment completed"
}


@transaction.atomic
def forwards(apps, schema_editor):
    Treatment = apps.get_model('odonto', "OrthodonticTreatment")
    for treatment in Treatment.objects.all():
        values = []
        for field, value in fields_to_values.items():
            field_value = getattr(treatment, field)
            if field_value:
                values.append(value)

        if len(values) > 1:
            raise ValueError(
                f'Unable to translate episode {treatment.episode_id}'
            )
        if len(values):
            treatment.resolution = values[0]
            treatment.save()

@transaction.atomic
def backwards(apps, schema_editor):
    Treatment = apps.get_model('odonto', "OrthodonticTreatment")
    values_to_fields = {v: i for i, v in fields_to_values.items()}

    for treatment in Treatment.objects.all():
        if treatment.resolution:
            setattr(treatment, values_to_fields[treatment.resolution], True)
            treatment.save()


class Migration(migrations.Migration):
    dependencies = [
        ('odonto', '0032_orthodontictreatment_resolution'),
    ]

    operations = [
        migrations.RunPython(
            forwards, backwards
        )
    ]
