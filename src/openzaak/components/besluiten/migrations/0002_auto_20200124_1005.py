# SPDX-License-Identifier: EUPL-1.2
# Copyright (C) 2020 Dimpact
# Generated by Django 2.2.9 on 2020-01-24 10:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("documenten", "0001_initial"),
        ("besluiten", "0001_initial"),
        ("catalogi", "0001_initial"),
        ("zaken", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="besluitinformatieobject",
            name="_informatieobject",
            field=models.ForeignKey(
                blank=True,
                help_text="URL-referentie naar het INFORMATIEOBJECT (in de Documenten API) waarin (een deel van) het besluit beschreven is.",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="documenten.EnkelvoudigInformatieObjectCanonical",
            ),
        ),
        migrations.AddField(
            model_name="besluitinformatieobject",
            name="besluit",
            field=models.ForeignKey(
                help_text="URL-referentie naar het BESLUIT.",
                on_delete=django.db.models.deletion.CASCADE,
                to="besluiten.Besluit",
            ),
        ),
        migrations.AddField(
            model_name="besluit",
            name="_besluittype",
            field=models.ForeignKey(
                blank=True,
                help_text="URL-referentie naar het BESLUITTYPE (in de Catalogi API).",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="catalogi.BesluitType",
            ),
        ),
        migrations.AddField(
            model_name="besluit",
            name="_zaak",
            field=models.ForeignKey(
                blank=True,
                help_text="URL-referentie naar de ZAAK (in de Zaken API) waarvan dit besluit uitkomst is.",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="zaken.Zaak",
            ),
        ),
        migrations.AddConstraint(
            model_name="besluitinformatieobject",
            constraint=models.UniqueConstraint(
                condition=models.Q(_informatieobject_url="", _negated=True),
                fields=("besluit", "_informatieobject_url"),
                name="unique_besluit_and_external_document",
            ),
        ),
        migrations.AddConstraint(
            model_name="besluitinformatieobject",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        models.Q(_informatieobject__isnull=True, _negated=True),
                        ("_informatieobject_url", ""),
                    ),
                    models.Q(
                        ("_informatieobject__isnull", True),
                        models.Q(_informatieobject_url="", _negated=True),
                    ),
                    _connector="OR",
                ),
                name="_informatieobject_or__informatieobject_url_filled",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="besluitinformatieobject",
            unique_together={("besluit", "_informatieobject")},
        ),
        migrations.AddConstraint(
            model_name="besluit",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        models.Q(_besluittype__isnull=True, _negated=True),
                        ("_besluittype_url", ""),
                    ),
                    models.Q(
                        ("_besluittype__isnull", True),
                        models.Q(_besluittype_url="", _negated=True),
                    ),
                    _connector="OR",
                ),
                name="_besluittype_or__besluittype_url_filled",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="besluit",
            unique_together={("identificatie", "verantwoordelijke_organisatie")},
        ),
    ]
